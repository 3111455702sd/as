#!/bin/bash

CYAN='\033[0;36m'
MAGENTA='\033[1;35m'
RED='\033[0;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
WHITE='\033[1;37m'
BOLD='\033[1m'
UNDERLINE='\033[4m'
NC='\033[0m'

BACKGROUND='\033[48;5;16m'
TEXT_WHITE='\033[38;5;15m'
TEXT_BLUE='\033[38;5;27m'
BIG_FONT='\033[1;37m\033[1;4m'

gradient_header() {
    echo -e "${BACKGROUND}${TEXT_BLUE}${BIG_FONT}(づ ●─● )づ${NC}"
    echo -e "${BACKGROUND}${TEXT_BLUE}${BIG_FONT}    和平精英美化制作工具    ${NC}"
    echo -e "${BACKGROUND}${TEXT_BLUE}${BIG_FONT}==============================${NC}"
}

initialize_folders() {
    mkdir -p ./pak ./tools ./解包dat ./解包uexp ./打包dat ./打包uexp
}

get_pak_files() {
    pak_files=($(ls ./pak/*.pak 2>/dev/null))
    if [ ${#pak_files[@]} -eq 0 ]; then
        echo -e "${RED}${BOLD}当前没有 PAK 文件！${NC}"
        return 1
    elif [ ${#pak_files[@]} -eq 1 ]; then
        selected_pak="${pak_files[0]}"
        echo -e "${YELLOW}${BOLD}自动选择唯一的 PAK 文件: ${selected_pak##*/}${NC}"
        return 0
    else
        echo -e "${YELLOW}${BOLD}可用的 PAK 文件:${NC}"
        for i in "${!pak_files[@]}"; do
            echo -e "${MAGENTA}${BIG_FONT}$((i+1))) ${pak_files[i]##*/}${NC}"
        done
        read -p "请输入要选择的 PAK 文件编号: " file_choice
        if [[ "$file_choice" =~ ^[0-9]+$ ]] && [ "$file_choice" -ge 1 ] && [ "$file_choice" -le "${#pak_files[@]}" ]; then
            selected_pak="${pak_files[file_choice-1]}"
            return 0
        else
            echo -e "${RED}${BOLD}无效选择！${NC}"
            return 1
        fi
    fi
}

pak_unpack_menu() {
    clear
    gradient_header
    echo -e "${CYAN}${BIG_FONT}======= PAK 解包 =======${NC}"
    get_pak_files
    if [ $? -eq 1 ]; then
        sleep 2; main_menu; return
    fi

    echo -e "${YELLOW}${BOLD}选择解包方式:${NC}"
    echo -e "${GREEN}${BOLD}1) dat解包${NC}"
    echo -e "${GREEN}${BOLD}2) uexp解包${NC}"
    echo -e "${GREEN}${BOLD}3) 返回主菜单${NC}"
    read -p "请输入选项 (1-3): " unpack_choice

    if [ "$unpack_choice" -eq 1 ]; then
        output_dir="./解包dat"
        echo -e "${CYAN}${BOLD}正在使用 QuickBMS 解包 ${selected_pak} 到 ${output_dir}...${NC}"
        qemu-i386 ./tools/7 ./tools/6 "$selected_pak" "$output_dir"
        python3 ./tools/1
    elif [ "$unpack_choice" -eq 2 ]; then
        output_dir="./解包uexp"
        echo -e "${CYAN}${BOLD}正在使用 uexp 解包 ${selected_pak} 到 ${output_dir}...${NC}"
        ./tools/5 -a "$selected_pak" "$output_dir"
        python3 ./tools/3
    elif [ "$unpack_choice" -eq 3 ]; then
        main_menu
        return
    else
        echo -e "${RED}${BOLD}无效选项！请重新选择！${NC}"
        sleep 1; pak_unpack_menu
    fi

    echo -e "${GREEN}${BOLD}解包完成！${NC}"
    read -n 1 -s -p "$(echo -e ${WHITE}${BIG_FONT}"按任意键返回主菜单...${NC}")"
    main_menu
}

pak_pack_menu() {
    clear
    gradient_header
    echo -e "${CYAN}${BIG_FONT}======= PAK 打包 =======${NC}"
    get_pak_files
    if [ $? -eq 1 ]; then
        sleep 2; main_menu; return
    fi

    echo -e "${YELLOW}${BOLD}选择打包方式:${NC}"
    echo -e "${GREEN}${BOLD}1) dat打包${NC}"
    echo -e "${GREEN}${BOLD}2) uexp打包${NC}"
    echo -e "${GREEN}${BOLD}3) 返回主菜单${NC}"
    read -p "请输入选项 (1-3): " pack_choice

    if [ "$pack_choice" -eq 1 ]; then
        input_dir="./打包dat"
        echo -e "${CYAN}${BOLD}dat打包 ${selected_pak}...${NC}"
        qemu-i386 ./tools/7 -w -r ./tools/6 "$selected_pak" "$input_dir"
    elif [ "$pack_choice" -eq 2 ]; then
        input_dir="./打包uexp"
        echo -e "${CYAN}${BOLD}uexp打包 ${selected_pak}...${NC}"
        ./tools/5 -a -r "$selected_pak" "$input_dir"
    elif [ "$pack_choice" -eq 3 ]; then
        main_menu
        return
    else
        echo -e "${RED}${BOLD}无效选项！${NC}"
        sleep 1; pak_pack_menu
    fi

    echo -e "${GREEN}${BOLD}打包完成！${NC}"
    read -n 1 -s -p "$(echo -e ${WHITE}${BIG_FONT}"按任意键返回主菜单...${NC}")"
    main_menu
}

beautify_menu() {
    clear
    gradient_header
    echo -e "${CYAN}${BIG_FONT}======= 一键美化 =======${NC}"
    echo -e "${YELLOW}${BOLD}1) 载具武器动作倍镜等等美化${NC}"
    echo -e "${YELLOW}${BOLD}2) 伪实体美化${NC}"
    echo -e "${GREEN}${BOLD}3) 返回主菜单${NC}"
    echo -e "${CYAN}${BIG_FONT}========================${NC}"

    read -p "请输入选项 (1-3): " beautify_choice
    case $beautify_choice in
        1) 
            echo -e "${CYAN}${BOLD}正在执行...${NC}"
            python3 ./tools/2
            echo -e "${GREEN}${BOLD}执行完成！${NC}"
            read -n 1 -s -p "$(echo -e ${WHITE}${BIG_FONT}"按任意键返回主菜单...${NC}")"
            main_menu
            ;;
        2) 
            echo -e "${CYAN}${BOLD}正在执行...${NC}"
            python3 ./tools/4
            echo -e "${GREEN}${BOLD}执行完成！${NC}"
            read -n 1 -s -p "$(echo -e ${WHITE}${BIG_FONT}"按任意键返回主菜单...${NC}")"
            main_menu
            ;;
        3) main_menu ;;
        *) 
            echo -e "${RED}${BOLD}无效选项！请重新选择！${NC}"
            beautify_menu
            ;;
    esac
}

main_menu() {
    clear
    gradient_header
    echo -e "${CYAN}${BIG_FONT}█████████████████████████████████${NC}"
    echo -e "${YELLOW}${BOLD}█  1) PAK 解包                    █${NC}"
    echo -e "${YELLOW}${BOLD}█  2) PAK 打包                    █${NC}"
    echo -e "${YELLOW}${BOLD}█  3) 一键美化                    █${NC}"
    echo -e "${WHITE}${BOLD}█  4) 退出                        █${NC}"
    echo -e "${CYAN}${BIG_FONT}█████████████████████████████████${NC}"

    read -p "请输入选项 (1-4): " choice
    case $choice in
        1) pak_unpack_menu ;;
        2) pak_pack_menu ;;
        3) beautify_menu ;;
        4) echo -e "${YELLOW}${BOLD}再见！${NC}"; exit 0 ;;
        *) echo -e "${RED}${BOLD}无效选项！${NC}"; sleep 1; main_menu ;;
    esac
}

initialize_folders
main_menu